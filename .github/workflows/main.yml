name: Deploy Website on EC2

on:
  workflow_dispatch:
    inputs:
      aws_region:
        description: "AWS Region"
        required: true
        default: "eu-west-2"
      action:
        description: "Terraform action to perform (apply or destroy)"
        required: true
        default: "apply"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ github.event.inputs.aws_region }}
      INSTANCE_NAME: "DevOps-ubuntu"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply or Destroy
        run: |
          if [[ "${{ github.event.inputs.action }}" == "apply" ]]; then
            terraform apply -auto-approve -var="aws_region=${{ env.AWS_REGION }}"
          else
            terraform destroy -auto-approve -var="aws_region=${{ env.AWS_REGION }}"
          fi

      - name: Get EC2 Instance Public IP
        id: getip
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=${INSTANCE_NAME}" \
            --query "Reservations[0].Instances[0].InstanceId" \
            --region $AWS_REGION \
            --output text)

          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --region $AWS_REGION \
            --output text)

          echo "public_ip=$PUBLIC_IP" >> $GITHUB_OUTPUT

      - name: Deploy Website on EC2
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy-key ubuntu@${{ steps.getip.outputs.public_ip }} <<'EOF'
            sudo apt-get update -y

            if ! dpkg -s apache2 >/dev/null 2>&1; then
              sudo apt-get install -y apache2
              sudo systemctl start apache2
              sudo systemctl enable apache2
            else
              sudo systemctl start apache2
            fi

            if ! command -v unzip &> /dev/null; then
              sudo apt-get install -y unzip
            fi

            cd /var/www/html
            sudo rm -rf ./*
            wget https://templatemo.com/tm-zip-files-2020/templatemo_596_electric_xtra.zip -O site.zip
            unzip site.zip
            sudo mv templatemo_596_electric_xtra/* .
            sudo rm -rf templatemo_596_electric_xtra site.zip
            sudo chown -R www-data:www-data /var/www/html
          EOF

      - name: Website URL
        if: ${{ github.event.inputs.action == 'apply' }}
        run: echo "Website is deployed at: http://${{ steps.getip.outputs.public_ip }}"
